<Page
    x:Class="BreadPlayer.Shell"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:BreadPlayer"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:controls="using:SplitViewMenu" xmlns:Interactivity="using:Microsoft.Xaml.Interactivity" 
    xmlns:Core="using:Microsoft.Xaml.Interactions.Core" xmlns:Behaviours="using:BreadPlayer.Behaviours"
      xmlns:Media="using:Microsoft.Xaml.Interactions.Media"
    xmlns:Converters="using:BreadPlayer.Converters" Loaded="Page_Loaded"
    mc:Ignorable="d" DataContext="{StaticResource ShellVM}">
    <Page.Resources>
        <Converters:DoubleToTimeConverter x:Key="DoubleToTime"/>
        <Converters:StringToIconConverter x:Key="StringToIcon"/>
        <Converters:BoolToVisibilityConverter x:Key="BoolToVisibility"/>
        <SymbolIcon Symbol="Play" x:Key="PlayIcon"/>
    </Page.Resources>
    <Grid Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup>
                <VisualState>
                    <VisualState.StateTriggers>
                        <StateTrigger IsActive="{Binding ElementName=posToggleBtn, Path=IsChecked}"/>
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="posToggleBtn.Content" Value="&#xE011;"/>
                        <Setter Target="controlPanel.Visibility" Value="Visible"/>
                    </VisualState.Setters>
                </VisualState> 
            </VisualStateGroup>
            <VisualStateGroup>
                <VisualState>
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="400"/>
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="openFileBtn.Visibility" Value="Visible"/>
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <controls:SplitViewMenu x:Name="hamburgerMenu" Grid.Row="0" PlaylistsItems="{Binding PlaylistsItems}" InitialPage="local:LibraryView" Grid.RowSpan="2">
            <controls:SplitViewMenu.TopNavigationItems>
                <controls:SimpleNavMenuItem DestinationPage="local:LibraryView" FontGlyph="&#x0044;" Label="Recently Played" Arguments="Recent" Symbol="Accept"></controls:SimpleNavMenuItem>
                <controls:SimpleNavMenuItem DestinationPage="local:LibraryView" FontGlyph="&#x0041;" Label="Music Library" Arguments="Library" Symbol="Accept"></controls:SimpleNavMenuItem>
                <controls:SimpleNavMenuItem DestinationPage="local:AlbumArtistView" FontGlyph="&#x0045;" Label="My Albums" Symbol="Accept"></controls:SimpleNavMenuItem>
            </controls:SplitViewMenu.TopNavigationItems>
            <controls:SplitViewMenu.BottomNavigationItems>
                <controls:SimpleNavMenuItem DestinationPage="local:SettingsView" FontGlyph="&#x0048;" Label="Settings" Symbol="Accept"></controls:SimpleNavMenuItem>
            </controls:SplitViewMenu.BottomNavigationItems>
        </controls:SplitViewMenu>
        <Grid x:Name="grid" Grid.Row="2" Margin="0,0,0,0" Background="{ThemeResource SystemControlBackgroundAccentBrush}">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <StackPanel x:Name="controlPanel" Grid.Row="0" RenderTransformOrigin="0.5,0.5" Visibility="Collapsed">
                <StackPanel.RenderTransform>
                    <TranslateTransform Y="0"/>
                </StackPanel.RenderTransform>
                <AppBarButton x:Name="infoBar" Width="Auto" Visibility="{Binding Source={StaticResource Core}, Path=Player.Length, Converter={StaticResource BoolToVisibility}}" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Background="{x:Null}" BorderBrush="{x:Null}" Grid.ColumnSpan="1" Height="80">
                    <Grid Margin="0,-14.5,0,-50" DataContext="{StaticResource Core}">
                        <Grid.Background>
                            <ImageBrush ImageSource="{Binding Path=Player.CurrentlyPlayingFile.AttachedPicture, Converter={StaticResource PathToImage}, ConverterParameter=null}" Stretch="UniformToFill"></ImageBrush>
                        </Grid.Background>
                        <StackPanel Orientation="Horizontal" Background="#99262626" VerticalAlignment="Stretch">
                        
                        <!--<Image x:Name="albumArt" Source="{Binding Source={StaticResource Core}, Path=Player.CurrentlyPlayingFile.AttachedPicture, Converter={StaticResource PathToImage}, ConverterParameter=null}" Stretch="UniformToFill"/>-->
                        <!--<Image x:Name="albumArt" Width="75" Source="Assets/albumart.png" Stretch="UniformToFill" Margin="10,0,0,0.2"/>-->
                        <StackPanel x:Name="tagsPanel" Orientation="Vertical" VerticalAlignment="Center" Margin="5,0,0,0">
                            <TextBlock Text="{Binding Path=Player.CurrentlyPlayingFile.Title, UpdateSourceTrigger=Explicit}" FontSize="20" FontFamily="Segoe UI Light" FontWeight="SemiLight" Foreground="White"/>
                            <TextBlock Text="{Binding Path=Player.CurrentlyPlayingFile.LeadArtist, UpdateSourceTrigger=Explicit}" FontSize="17" FontFamily="Segoe UI Light" Foreground="White"/>
                            <TextBlock Text="{Binding Path=Player.CurrentlyPlayingFile.Album, UpdateSourceTrigger=Explicit}" FontSize="15" FontFamily="Segoe UI Light" Foreground="White"/>
                        </StackPanel>
                    </StackPanel>
                    </Grid>
                </AppBarButton>
                <Grid  Visibility="{Binding ElementName=volBtn, Path=IsChecked}" DataContext="{StaticResource Core}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <Slider x:Name="volumeSlider" Value="{Binding Path=Player.Volume, Mode=TwoWay, FallbackValue=50}" MinWidth="300" Maximum="100" LargeChange="10" Style="{StaticResource CircleSlider}"  Background="#FFC5C5C5" Foreground="{ThemeResource SystemControlBackgroundAccentBrush}" BorderBrush="{x:Null}" Margin="15,0,0,0" />
                    <TextBlock Grid.Column="1" TextAlignment="Center" Text="{Binding Path=Player.Volume, Mode=TwoWay, FallbackValue=50}" FontSize="20" Height="30" Foreground="#FFE0E0E0" Margin="10,0,10,0"/>
                </Grid>
                <Grid HorizontalAlignment="Stretch">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <TextBlock Grid.Column="0" Text="{Binding CurrentPosition, Converter={StaticResource DoubleToTime}, FallbackValue='00:00'}" HorizontalAlignment="Left" VerticalAlignment="Center" Foreground="#FFC5C5C5" Margin="10,0,0,0" FontSize="12"/>
                    <Slider Grid.Column="1" x:Name="positionSlider" Style="{StaticResource CircleSlider}" Maximum="{Binding Source={StaticResource Core}, Path=Player.Length, FallbackValue=1000}" Value="{Binding CurrentPosition, Mode=TwoWay, UpdateSourceTrigger=Explicit, FallbackValue=0}" Background="#FFC5C5C5" BorderBrush="{x:Null}" Foreground="{ThemeResource SystemControlBackgroundAccentBrush}" Margin="15,0,0,0"/>
                     <TextBlock Grid.Column="2" Text="{Binding Source={StaticResource Core}, Path=Player.Length, Converter={StaticResource DoubleToTime}, FallbackValue='00:00'}" VerticalAlignment="Center" HorizontalAlignment="Right" Foreground="#FFC5C5C5" Margin="15,0,10,0" FontSize="12"/>
                </Grid>
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Height="70" VerticalAlignment="Top">
                    <AppBarButton BorderBrush="{ThemeResource SystemControlBackgroundAccentBrush}" Icon="Previous" VerticalAlignment="Stretch" IsCompact="True" Style="{StaticResource CustomAppBarButtonStyle}" Command="{Binding PlayPreviousCommand}" Width="50"/>
                    <AppBarButton BorderBrush="{ThemeResource SystemControlBackgroundAccentBrush}" Icon="{Binding PlayPauseIcon, UpdateSourceTrigger=Explicit, TargetNullValue={StaticResource PlayIcon}, FallbackValue={StaticResource PlayIcon}}" VerticalAlignment="Stretch" Command="{Binding PlayPauseCommand}" Style="{StaticResource CustomAppBarButtonStyle}" Width="50"/>
                    <AppBarButton BorderBrush="{ThemeResource SystemControlBackgroundAccentBrush}" Icon="Next" VerticalAlignment="Stretch" IsCompact="True" Style="{StaticResource CustomAppBarButtonStyle}" Command="{Binding PlayNextCommand}" Background="{ThemeResource AppBarButtonBackgroundDisabled}" Width="50"/>
                    <AppBarToggleButton  x:Name="shuffleBtn" VerticalAlignment="Stretch" IsCompact="True" IsChecked="{Binding Path=Shuffle, Mode=TwoWay}" Width="50" Style="{StaticResource CustomAppBarToggleButtonStyle}" Icon="Shuffle"/>
                    <AppBarButton BorderBrush="{ThemeResource SystemControlBackgroundAccentBrush}" ToolTipService.ToolTip="{Binding Repeat}" x:Name="repeatBtn" Icon="{Binding Repeat, Converter={StaticResource StringToIcon}}" VerticalAlignment="Stretch" Visibility="{Binding ElementName=shuffleBtn, Path=Visibility}" IsCompact="True" Command="{Binding SetRepeatCommand}" Width="50" Style="{StaticResource CustomAppBarButtonStyle}" Margin="0" />
                    <AppBarToggleButton x:Name="volBtn" Icon="Volume" VerticalAlignment="Stretch" IsCompact="True" Width="50" Style="{StaticResource CustomAppBarToggleButtonStyle}"/>
                    <AppBarButton Icon="OpenFile" BorderBrush="{ThemeResource SystemControlBackgroundAccentBrush}" x:Name="openFileBtn" Visibility="Collapsed" VerticalAlignment="Stretch" IsCompact="True" Command="{Binding Path=OpenSongCommand}" Style="{StaticResource CustomAppBarButtonStyle}" Width="50"/>
                </StackPanel>
            </StackPanel>
            <ToggleButton Grid.Row="1" Foreground="White" x:Name="posToggleBtn" HorizontalAlignment="Stretch" IsChecked="{Binding IsPlayBarVisible, Mode=TwoWay}" FontFamily="Segoe MDL2 Assets" Background="Transparent" Content="&#xE010;" Height="27">
                <Interactivity:Interaction.Behaviors>
                    <Core:EventTriggerBehavior EventName="Unchecked" SourceObject="{Binding ElementName=posToggleBtn}">
                        <Media:ControlStoryboardAction>
                            <Media:ControlStoryboardAction.Storyboard>
                                <Storyboard>
                                    <DoubleAnimation EnableDependentAnimation="True"
                        Storyboard.TargetName="controlPanel"
                        Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)"
                        From="0"
                                                     To="205" 
                        Duration="0:0:0.6" />
                                </Storyboard>
                            </Media:ControlStoryboardAction.Storyboard>
                        </Media:ControlStoryboardAction>
                        <!--<Core:ChangePropertyAction PropertyName="Visibility" TargetObject="{Binding ElementName=controlPanel}" Value="Collapsed"/>-->
                    </Core:EventTriggerBehavior>
                    <Core:EventTriggerBehavior EventName="Checked" SourceObject="{Binding ElementName=posToggleBtn}">
                        <Media:ControlStoryboardAction>
                            <Media:ControlStoryboardAction.Storyboard>
                                <Storyboard>
                                    <DoubleAnimation EnableDependentAnimation="True"
                        Storyboard.TargetName="controlPanel"
                        Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)" 
                        From="205" To="0" 
                        Duration="0:0:0.1" />
                                </Storyboard>
                            </Media:ControlStoryboardAction.Storyboard>
                        </Media:ControlStoryboardAction>
                    </Core:EventTriggerBehavior>
                </Interactivity:Interaction.Behaviors>
            </ToggleButton>
        </Grid>
        <!--<Canvas VerticalAlignment="Bottom" Height="25" Background="{ThemeResource SystemControlBackgroundAccentBrush}" Grid.Row="2">
            <StackPanel Margin="10,0,0,0" Orientation="Horizontal">
                <TextBlock Text="{Binding Path=Tags.Title, UpdateSourceTrigger=Explicit, FallbackValue='...'}" Foreground="{ThemeResource ThemeForeground}"/>
                <TextBlock Text="&#x2022;" FontSize="15" Margin="5,0,0,0"/>
                <TextBlock Text="{Binding Path=Tags.Artist, UpdateSourceTrigger=Explicit, FallbackValue='...'}" Foreground="{ThemeResource ThemeForeground}" Margin="5,0,0,0"/>
                <TextBlock Text="&#x2022;" FontSize="15" Margin="5,0,0,0"/>
                <TextBlock Text="{Binding Path=Tags.Album, UpdateSourceTrigger=Explicit, FallbackValue='...'}" Foreground="{ThemeResource ThemeForeground}" Margin="5,0,0,0"/>
            </StackPanel>
        </Canvas>-->
    </Grid>
</Page>
